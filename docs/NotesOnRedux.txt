CLASSIC REDUX:
//https://redux.js.org/basics/basic-tutorial

ACTIONS are payloads of information that send data from your application to your store. 
They are the only source of information for the store. 
You send them to the store using store.dispatch().

Action creators are exactly thatâ€”functions that create actions. 
In Redux, action creators simply return an action.

REDUCERS specify how the application's state changes in response to actions sent to the store.
The reducer is a pure function that takes the previous state and an action, and returns the next state.
Never do thsse inside a reducer:

1.) Mutate its arguments;
2.) Perform side effects like API calls and routing transitions (MORE ON THIS LATER)
3.) Call non-pure functions, e.g. Date.now() or Math.random().

If you find yourself often writing such alot of operations to deep copy data, it's a good idea to use a helper like immutability-helper, 
updeep, or even a library like Immutable.

The STORE is the object that brings redux together. The store has the following responsibilities:

1.) Holds application state;
2.) Allows access to state via getState();
3.) Allows state to be updated via dispatch(action);
4.) Registers listeners via subscribe(listener);
5.) Handles unregistering of listeners via the function returned by subscribe(listener).

Notice in this code the source file root.js, combines all reducers and this is bootstrapped by store.js.
WHEN ADDING NEW PAGE ADD REDUCERS IN ROOT.JS

SO HOW DOES REACT-REDUX FIT INTO THIS?

EASY: connect(mappingFunctionThatMapsStateToProps,mapFunctionsThatSetPropsThatDispatch)(CLASSNAME)
NOTE1: THESE functions are called in same way subscriber is when state changes
NOTE2: It is common just to pass mappingFunctionThatMapsStateToProps. In this case react-redux provided props.dispatch for compomet
to do dispatching

All container components need access to the Redux store so they can subscribe to it. 
The recommended option is to use a special React Redux component called <Provider> to wrap <App/> and this insures all components get store
